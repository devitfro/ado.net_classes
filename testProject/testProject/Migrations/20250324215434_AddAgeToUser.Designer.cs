// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using testProject.Models;

#nullable disable

namespace testProject.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250324215434_AddAgeToUser")]
    partial class AddAgeToUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductReview", b =>
                {
                    b.Property<int>("IdProduct")
                        .HasColumnType("int")
                        .HasColumnName("id_product");

                    b.Property<int>("IdReview")
                        .HasColumnType("int")
                        .HasColumnName("id_review");

                    b.HasKey("IdProduct", "IdReview")
                        .HasName("PK__ProductR__D8CE77C3C540E4E9");

                    b.HasIndex("IdReview");

                    b.ToTable("ProductReviews", (string)null);
                });

            modelBuilder.Entity("testProject.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Category__3213E83F20C48972");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("testProject.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdProduct")
                        .HasColumnType("int")
                        .HasColumnName("id_product");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.HasKey("Id")
                        .HasName("PK__Orders__3213E83FAD21658F");

                    b.HasIndex("IdProduct");

                    b.HasIndex("IdUser");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("testProject.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdCategory")
                        .HasColumnType("int")
                        .HasColumnName("id_category");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<double>("PriceDelivery")
                        .HasColumnType("float")
                        .HasColumnName("price_delivery");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("Id")
                        .HasName("PK__Product__3213E83FB99344FD");

                    b.HasIndex("IdCategory");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("testProject.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("text");

                    b.HasKey("Id")
                        .HasName("PK__Review__3213E83F033DC44D");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("testProject.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Users__3213E83F84DC3F92");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProductReview", b =>
                {
                    b.HasOne("testProject.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("IdProduct")
                        .IsRequired()
                        .HasConstraintName("FK__ProductRe__id_pr__3E52440B");

                    b.HasOne("testProject.Models.Review", null)
                        .WithMany()
                        .HasForeignKey("IdReview")
                        .IsRequired()
                        .HasConstraintName("FK__ProductRe__id_re__3F466844");
                });

            modelBuilder.Entity("testProject.Models.Order", b =>
                {
                    b.HasOne("testProject.Models.Product", "IdProductNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdProduct")
                        .HasConstraintName("FK__Orders__id_produ__5070F446");

                    b.HasOne("testProject.Models.User", "IdUserNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK__Orders__id_user__4F7CD00D");

                    b.Navigation("IdProductNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("testProject.Models.Product", b =>
                {
                    b.HasOne("testProject.Models.Category", "IdCategoryNavigation")
                        .WithMany("Products")
                        .HasForeignKey("IdCategory")
                        .IsRequired()
                        .HasConstraintName("FK__Product__id_cate__3B75D760");

                    b.Navigation("IdCategoryNavigation");
                });

            modelBuilder.Entity("testProject.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("testProject.Models.Product", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("testProject.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
